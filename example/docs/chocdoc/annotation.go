// Code generated by chocdoc. DO NOT EDIT.
// version: v0.0.1

package chocdoc

import(
    "github.com/go-chocolate/chocdoc/elements"

    "github.com/go-chocolate/chocdoc/example/internal/handler"
)

var nodes = map[string]*elements.Node{
    "github.com/go-chocolate/chocdoc/example/internal/handler.CreateBook": {
		Type: elements.TypeFunc,
		Name: "CreateBook",
		Ptr: handler.CreateBook,
		Path: "github.com/go-chocolate/chocdoc/example/internal/handler.CreateBook",
		Comments: []string{"CreateBook", "@request [CreateBookRequest]", "@response [CreateBookResponse]"},
		Annotations: []*elements.Annotation{
            {
				Raw: "@request [CreateBookRequest]",
				Content: "request [github.com/go-chocolate/chocdoc/example/internal/handler.CreateBookRequest]",
				Relation: []interface{}{new(handler.CreateBookRequest), },
			},
            {
				Raw: "@response [CreateBookResponse]",
				Content: "response [github.com/go-chocolate/chocdoc/example/internal/handler.CreateBookResponse]",
				Relation: []interface{}{new(handler.CreateBookResponse), },
			},
		},
	},
    "github.com/go-chocolate/chocdoc/example/internal/handler.UpdateBook": {
		Type: elements.TypeFunc,
		Name: "UpdateBook",
		Ptr: handler.UpdateBook,
		Path: "github.com/go-chocolate/chocdoc/example/internal/handler.UpdateBook",
		Comments: []string{"UpdateBook", "@request [UpdateBookRequest]", "@response [UpdateBookResponse]"},
		Annotations: []*elements.Annotation{
            {
				Raw: "@request [UpdateBookRequest]",
				Content: "request [github.com/go-chocolate/chocdoc/example/internal/handler.UpdateBookRequest]",
				Relation: []interface{}{new(handler.UpdateBookRequest), },
			},
            {
				Raw: "@response [UpdateBookResponse]",
				Content: "response [github.com/go-chocolate/chocdoc/example/internal/handler.UpdateBookResponse]",
				Relation: []interface{}{new(handler.UpdateBookResponse), },
			},
		},
	},
    "github.com/go-chocolate/chocdoc/example/internal/handler.Books": {
		Type: elements.TypeFunc,
		Name: "Books",
		Ptr: handler.Books,
		Path: "github.com/go-chocolate/chocdoc/example/internal/handler.Books",
		Comments: []string{"Books", "@request", "@response [BooksResponse]"},
		Annotations: []*elements.Annotation{
            {
				Raw: "@request",
				Content: "request",
				Relation: []interface{}{},
			},
            {
				Raw: "@response [BooksResponse]",
				Content: "response [github.com/go-chocolate/chocdoc/example/internal/handler.BooksResponse]",
				Relation: []interface{}{new(handler.BooksResponse), },
			},
		},
	},
    "github.com/go-chocolate/chocdoc/example/internal/handler.DeleteBook": {
		Type: elements.TypeFunc,
		Name: "DeleteBook",
		Ptr: handler.DeleteBook,
		Path: "github.com/go-chocolate/chocdoc/example/internal/handler.DeleteBook",
		Comments: []string{"DeleteBook", "@response [UpdateBookResponse]"},
		Annotations: []*elements.Annotation{
            {
				Raw: "@response [UpdateBookResponse]",
				Content: "response [github.com/go-chocolate/chocdoc/example/internal/handler.UpdateBookResponse]",
				Relation: []interface{}{new(handler.UpdateBookResponse), },
			},
		},
	},
    "github.com/go-chocolate/chocdoc/example/internal/handler.BookDetail": {
		Type: elements.TypeFunc,
		Name: "BookDetail",
		Ptr: handler.BookDetail,
		Path: "github.com/go-chocolate/chocdoc/example/internal/handler.BookDetail",
		Comments: []string{"BookDetail", "@response [BookDetailResponse]"},
		Annotations: []*elements.Annotation{
            {
				Raw: "@response [BookDetailResponse]",
				Content: "response [github.com/go-chocolate/chocdoc/example/internal/handler.BookDetailResponse]",
				Relation: []interface{}{new(handler.BookDetailResponse), },
			},
		},
	},
}

func Nodes() map[string]*elements.Node {
	return nodes
}

